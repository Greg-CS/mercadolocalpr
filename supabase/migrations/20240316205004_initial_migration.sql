create schema if not exists "marketplace";

create table "marketplace"."categories" (
    "id" bigint generated by default as identity not null,
    "uuid" uuid default gen_random_uuid(),
    "name" text not null
);


create table "marketplace"."locations" (
    "id" bigint generated by default as identity not null,
    "uuid" uuid not null default gen_random_uuid(),
    "name" text
);


create table "marketplace"."posts_events" (
    "id" bigint generated by default as identity not null,
    "timestamp" timestamp without time zone not null,
    "eventType" character varying,
    "postId" uuid,
    "data" json,
    "postType" text not null default 'Generic'::text
);


create table "marketplace"."posts_projection" (
    "id" smallint generated by default as identity not null,
    "uuid" uuid not null,
    "created_at" timestamp with time zone not null,
    "title" character varying not null,
    "description" text not null,
    "category_id" uuid not null default gen_random_uuid(),
    "price" integer not null,
    "location_id" uuid not null default gen_random_uuid(),
    "user_id" character varying not null,
    "photo_url" text not null,
    "is_moderated" boolean default false
);


CREATE UNIQUE INDEX categories_pkey ON marketplace.categories USING btree (id);

CREATE UNIQUE INDEX locations_pkey ON marketplace.locations USING btree (id);

CREATE UNIQUE INDEX posts_events_pkey ON marketplace.posts_events USING btree (id);

CREATE UNIQUE INDEX posts_projection_pkey ON marketplace.posts_projection USING btree (id);

CREATE UNIQUE INDEX posts_projection_ukey ON marketplace.posts_projection USING btree (uuid);

alter table "marketplace"."categories" add constraint "categories_pkey" PRIMARY KEY using index "categories_pkey";

alter table "marketplace"."locations" add constraint "locations_pkey" PRIMARY KEY using index "locations_pkey";

alter table "marketplace"."posts_events" add constraint "posts_events_pkey" PRIMARY KEY using index "posts_events_pkey";

alter table "marketplace"."posts_projection" add constraint "posts_projection_pkey" PRIMARY KEY using index "posts_projection_pkey";

create or replace view "marketplace"."posts" as  SELECT posts.uuid,
    posts.title,
    posts.description,
    posts.price,
    posts.photo_url,
    categories.name AS category,
    locations.name AS location
   FROM ((marketplace.posts_projection posts
     LEFT JOIN marketplace.categories categories ON ((categories.uuid = posts.category_id)))
     LEFT JOIN marketplace.locations locations ON ((locations.uuid = posts.location_id)))
  WHERE (posts.is_moderated = true);


grant select on table "marketplace"."categories" to "service_role";

grant select on table "marketplace"."locations" to "service_role";

grant insert on table "marketplace"."posts_events" to "service_role";

grant select on table "marketplace"."posts_events" to "service_role";

grant delete on table "marketplace"."posts_projection" to "service_role";

grant insert on table "marketplace"."posts_projection" to "service_role";

grant references on table "marketplace"."posts_projection" to "service_role";

grant select on table "marketplace"."posts_projection" to "service_role";

grant trigger on table "marketplace"."posts_projection" to "service_role";

grant truncate on table "marketplace"."posts_projection" to "service_role";

grant update on table "marketplace"."posts_projection" to "service_role";


create schema if not exists "moderation";

create table "moderation"."reported_posts_events" (
    "id" integer generated by default as identity not null,
    "event_type" text not null,
    "post_id" uuid not null,
    "created_at" timestamp with time zone not null,
    "data" json not null
);


CREATE UNIQUE INDEX reported_posts_events_pkey ON moderation.reported_posts_events USING btree (id);

alter table "moderation"."reported_posts_events" add constraint "reported_posts_events_pkey" PRIMARY KEY using index "reported_posts_events_pkey";

grant delete on table "moderation"."reported_posts_events" to "service_role";

grant insert on table "moderation"."reported_posts_events" to "service_role";

grant references on table "moderation"."reported_posts_events" to "service_role";

grant select on table "moderation"."reported_posts_events" to "service_role";

grant trigger on table "moderation"."reported_posts_events" to "service_role";

grant truncate on table "moderation"."reported_posts_events" to "service_role";

grant update on table "moderation"."reported_posts_events" to "service_role";